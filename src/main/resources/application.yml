server:
  servlet:
    context-path: /

spring:
  zipkin:
    base-url: ${SPRING_ZIPKIN_BASE_URL:http://localhost:9411/}
  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:9296}
  application:
    name: API-GATEWAY
  profiles:
    active:
      - dev
  redis:
    host: redis
    port: 6379
  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin, RETAIN_UNIQUE
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          "[/**]":
            allowed-origin-patterns: "*"
            allowed-headers: "*"
            exposed-headers: "*"
            allow-credentials: true
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS
      routes:
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
        - id: PAYMENT-SERVICE
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/payment-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 2
                key-resolver: "#{@ipKeyResolver}"
        - id: PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product-service/**
        - id: SHIPPING-SERVICE
          uri: lb://SHIPPING-SERVICE
          predicates:
            - Path=/shipping-service/**
        - id: USER-SERVICE
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
        - id: FAVOURITE-SERVICE
          uri: lb://FAVOURITE-SERVICE
          predicates:
            - Path=/favourite-service/**
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 4
                redis-rate-limiter.burstCapacity: 4
                key-resolver: "#{@ipKeyResolver}"
        - id: PROXY-CLIENT
          uri: lb://PROXY-CLIENT
          predicates:
            - Path=/app/**

resilience4j:
  circuitbreaker:
    instances:
      apiGateway:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        automatic-transition-from-open-to-half-open-enabled: true
        failure-rate-threshold: 50
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        sliding-window-size: 10
        wait-duration-in-open-state: 5s
        sliding-window-type: COUNT_BASED

management:
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always